@using Nop.Core
@using Nop.Services.Configuration

@inject IStoreContext storeContext
@inject ISettingService settingService

@model AdminHeaderLinksModel

@if (Model.IsCustomerImpersonated || Model.DisplayAdminLink)
{
    var currentStore = storeContext.CurrentStore;
    var isMenuMobile = settingService.GetSettingByKey("minimalthemesettings.ismenumobile", true, currentStore.Id, true);
    var headerClass = isMenuMobile ? "mobile" : "normal";

    <div class="admin-header-links @headerClass">
        @if (Model.IsCustomerImpersonated)
        {
            <div class="impersonate">
                <span>@string.Format(T("Account.ImpersonatedAs").Text, Model.ImpersonatedCustomerName)</span>
                <a href="@Url.RouteUrl("Logout")" class="finish-impersonation" title="@T("Account.ImpersonatedAs.Finish.Hint")">@T("Account.ImpersonatedAs.Finish")</a>
            </div>
        }
        @if (Model.DisplayAdminLink)
        {
            <a href="@Url.Content("~/admin")" class="administration">@T("Account.Administration")</a>
        }
        @if (!String.IsNullOrEmpty(Model.EditPageUrl))
        {
            <a href="@Model.EditPageUrl" class="manage-page">@T("Common.ManagePage")</a>
        }
    </div>
}