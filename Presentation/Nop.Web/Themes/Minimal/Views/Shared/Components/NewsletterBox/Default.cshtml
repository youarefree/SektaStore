@model NewsletterBoxModel

@{
    var newsletterUniqueIdentifier = string.Empty;

    if (Url.ActionContext.RouteData.Values["newsletterId"] != null)
    {
        newsletterUniqueIdentifier = Url.ActionContext.RouteData.Values["newsletterId"].ToString();
    }

    var newsletterEmailId = string.Format("newsletter-email-{0}", newsletterUniqueIdentifier);
    var newsletterSubscribeId = string.Format("newsletter_subscribe-{0}", newsletterUniqueIdentifier);
    var newsletterUnsubscribeId = string.Format("newsletter_unsubscribe-{0}", newsletterUniqueIdentifier);
}

<div class="title">
    <span>@T("Newsletter.Title")</span>
</div>
<div class="newsletter"
     data-newsLetterSubscribeUrl="@(Url.RouteUrl("SubscribeNewsletter"))"
     data-allowToUnsubscribe="@Model.AllowToUnsubscribe.ToString()">
    <form>
        <div class="newsletter-subscribe newsletter-subscribe-block">
            <div class="newsletter-email">
                <input type="text" id="@newsletterEmailId" class="newsletter-subscribe-text" placeholder="@T("Newsletter.Email.Placeholder")" aria-label="@T("Newsletter.Subscribe")" />
                <input type="button" id="newsletter-subscribe-button" value="@T(Model.AllowToUnsubscribe ? "Newsletter.Options.Send" : "Newsletter.Options.Subscribe")" class="button-1 newsletter-subscribe-button" />
                @if (Model.AllowToUnsubscribe)
                {
                    <div class="options">
                        <span class="subscribe">
                            <input id="@newsletterSubscribeId" class="newsletter_subscribe" type="radio" value="newsletter_subscribe" name="newsletter_block" checked="checked" />
                            <label for="@newsletterSubscribeId">@T("Newsletter.Options.Subscribe")</label>
                        </span>
                        <span class="unsubscribe">
                            <input id="@newsletterUnsubscribeId" class="newsletter_unsubscribe" type="radio" value="newsletter_unsubscribe" name="newsletter_block" />
                            <label for="@newsletterUnsubscribeId">@T("Newsletter.Options.Unsubscribe")</label>
                        </span>
                    </div>
                }
            </div>
            <div class="newsletter-validation">
                <span style="display: none;" class="subscribe-loading-progress please-wait">@T("Common.Wait...")</span>
                <span class="field-validation-valid" data-valmsg-for="@newsletterEmailId" data-valmsg-replace="true"></span>
            </div>
        </div>
        <div class="newsletter-result newsletter-result-block"></div>
    </form>
    @await Component.InvokeAsync("SocialButtons")
</div>
