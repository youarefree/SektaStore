@model TopMenuModel.CategoryLineModel

@if (Model.Category.SubCategories.Count > 0)
{
    <li class="has-sublist">
        @if (Model.Level == 0)
        {
            <div class="openSublistWrapper">
                <span class="show-submenu left"></span>
                <a class="with-subcategories" href="@Url.RouteUrl("Category", new { SeName = Model.Category.SeName })">@Model.Category.Name</a>
                <span class="show-submenu right"></span>
            </div>
        }
        else
        {
            <a class="with-subcategories" href="@Url.RouteUrl("Category", new { SeName = Model.Category.SeName })">@Model.Category.Name</a>
        }

        <div class="plus-button"></div>
        <div class="sublist-wrap">
            <ul class="sublist">
                <li class="back-button">
                    <span>@T("SevenSpikes.Themes.Common.BackSublist")</span>
                </li>
                @foreach (var subCategory in Model.Category.SubCategories)
                {
                    var categoryLineModel = new TopMenuModel.CategoryLineModel
                    {
                        Category = subCategory,
                        Level = Model.Level + 1,
                        ResponsiveMobileMenu = Model.ResponsiveMobileMenu
                    };
                    @await Html.PartialAsync("_CategoryLine.TopMenu", categoryLineModel)
                }
            </ul>
        </div>
    </li>
}
else
{
    <li>
        @if (Model.Category.NumberOfProducts.HasValue)
        {
            <a href="@Url.RouteUrl("Category", new { SeName = Model.Category.SeName })">@Model.Category.Name @T("Categories.TotalProducts", Model.Category.NumberOfProducts.Value)</a>
        }
        else
        {
            <a href="@Url.RouteUrl("Category", new { SeName = Model.Category.SeName })">@Model.Category.Name</a>
        }
    </li>
}
